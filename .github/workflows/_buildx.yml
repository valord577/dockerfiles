name: _buildx
on:
  workflow_call:
    inputs:
      platforms:
        default: linux/amd64
        required: false
        type: string
      build-args:
        default: ''
        required: false
        type: string
      context:
        default: ""
        required: false
        type: string
      tagname:
        default: ""
        required: false
        type: string
      target:
        default: ""
        required: false
        type: string

jobs:
  _buildx:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}
    env:
      _PUSH: false
    steps:
      - name: Set ENV `_PUSH=true`
        if: ${{ github.event_name == 'push' }}
        run: echo "_PUSH=true" >> "$GITHUB_ENV"
      - name: Git Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          platforms: ${{ inputs.platforms }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSCODE }}
      - name: Login to Aliyun ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY_ALIYUN_ACR }}
          username: ${{ secrets.ALIYUN_ACR_USERNAME }}
          password: ${{ secrets.ALIYUN_ACR_PASSCODE }}
      - name: Parse _context_ / _tagname_
        run: |
          echo "_context_=${{ inputs.context == '' && github.workflow || inputs.context }}" >> $GITHUB_ENV
          echo "_tagname_=${{ inputs.tagname == '' && github.workflow || inputs.tagname }}" >> $GITHUB_ENV
      - name: Build Image and Push
        uses: docker/build-push-action@v6
        with:
          pull: true
          push: ${{ env._PUSH }}
          context: ${{ github.workspace }}/${{ env._context_ }}
          target: ${{ inputs.target }}
          platforms: ${{ inputs.platforms }}
          build-args: ${{ inputs.build-args }}
          tags: |
            ${{ vars.DOCKER_HUB_USERNAME }}/${{ env._tagname_ }}:latest
            ${{ vars.DOCKER_HUB_USERNAME }}/${{ env._tagname_ }}:${{ github.sha }}
            ${{ vars.REGISTRY_ALIYUN_ACR }}/${{ vars.DOCKER_HUB_USERNAME }}/${{ env._tagname_ }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
