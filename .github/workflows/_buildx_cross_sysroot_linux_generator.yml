name: _buildx_cross_sysroot_linux_generator
on:
  workflow_call:
    inputs:
      SYSROOT_LINUX_HEADER_UAPI:
        required: true
        type: string
      SYSROOT_LIBSTDCXX_GCC_VER:
        required: true
        type: string

env:
  GH_TOKEN: ${{ github.token }}
  S3_R2_ACCOUNT_ID: ${{ secrets.S3_R2_ACCOUNT_ID }}
  S3_R2_ACCESS_KEY: ${{ secrets.S3_R2_ACCESS_KEY }}
  S3_R2_SECRET_KEY: ${{ secrets.S3_R2_SECRET_KEY }}
  S3_R2_STORAGE_BUCKET: ${{ secrets.S3_R2_STORAGE_BUCKET }}
  S3_R2_STORAGE_REGION: ${{ secrets.S3_R2_STORAGE_REGION }}

jobs:
  _buildx:
    strategy:
      matrix:
        include:
          - target: target-ct-amd64-glibc
          - target: target-ct-arm64-glibc
          - target: target-ct-armhf-glibc
          - target: target-ct-amd64-musl
          - target: target-ct-arm64-musl
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}
    env:
      _archive_: crosstool-linux${{ inputs.SYSROOT_LINUX_HEADER_UAPI }}-gcc${{ inputs.SYSROOT_LIBSTDCXX_GCC_VER }}-${{ matrix.target }}
    steps:
      - name: clone source
        run: |
          git config --global --add safe.directory "*"

          git init
          git remote add x ${{github.server_url}}/${{ github.repository }}.git
          git fetch --no-tags --prune --no-recurse-submodules --depth=1 x +${{ github.sha }}
          git checkout FETCH_HEAD
      - name: setup rclone for s3 (cloudflare r2)
        run: |
          ./.github/rclone.py
      - name: setup docker buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
      - name: cross sysroot build - ${{ matrix.target }}
        uses: docker/build-push-action@v6
        with:
          pull: true
          push: false
          load: true
          context: cross-sysroot-linux-generator
          target: ${{ matrix.target }}
          build-args: |
            SYSROOT_LINUX_HEADER_UAPI=${{ inputs.SYSROOT_LINUX_HEADER_UAPI }}
            SYSROOT_LIBSTDCXX_GCC_VER=${{ inputs.SYSROOT_LIBSTDCXX_GCC_VER }}
          tags: |
            ${{ github.workflow }}:${{ github.sha }}
      - name: cross sysroot catch
        run: |
          docker images
          docker create --name extractor \
            ${{ github.workflow }}:${{ github.sha }}
          docker cp -a extractor:/crosstool .; docker rm extractor

          # keep file permissions and case sensitivity
          tar -cvf ${{ env._archive_ }}.tar crosstool
      - name: cross sysroot upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env._archive_ }}
          path: ${{ env._archive_ }}.tar
          if-no-files-found: error
      - name: commit to pre-compiled storage
        if: ${{ github.event_name == 'push' }}
        run: |
          tar -zcvf ${{ env._archive_ }}.tar.gz crosstool
          ./.github/rclone copy "${{ env._archive_ }}.tar.gz" "r2:${{ env.S3_R2_STORAGE_BUCKET }}/crosstool-ng/"
